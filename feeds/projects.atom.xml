<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Ahmad Al-Shishtawy - Projects</title><link href="https://alshishtawy.github.io/" rel="alternate"></link><link href="https://alshishtawy.github.io/feeds/projects.atom.xml" rel="self"></link><id>https://alshishtawy.github.io/</id><updated>2017-08-07T11:00:00+02:00</updated><subtitle>Senior Researcher, PhD</subtitle><entry><title>HDFS Contents Manager for Jupyter Notebooks</title><link href="https://alshishtawy.github.io/hdfs-contents-manager.html" rel="alternate"></link><published>2017-08-07T11:00:00+02:00</published><updated>2017-08-07T11:00:00+02:00</updated><author><name>Ahmad Al-Shishtawy</name></author><id>tag:alshishtawy.github.io,2017-08-07:/hdfs-contents-manager.html</id><summary type="html">&lt;p&gt;I implemented a contents manager for &lt;a class="reference external" href="http://jupyter.org/"&gt;Jupyter&lt;/a&gt; notebooks that uses &lt;span class="caps"&gt;HDFS&lt;/span&gt; as a storage backend to store notebooks.
I have two versions. The main difference is the library used to read/write &lt;span class="caps"&gt;HDFS&lt;/span&gt;.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The first version uses &lt;a class="reference external" href="https://github.com/dask/hdfs3"&gt;&lt;span class="caps"&gt;HDFS3&lt;/span&gt;&lt;/a&gt; which is based on libhdfs3, a native C/C++ library to interact …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I implemented a contents manager for &lt;a class="reference external" href="http://jupyter.org/"&gt;Jupyter&lt;/a&gt; notebooks that uses &lt;span class="caps"&gt;HDFS&lt;/span&gt; as a storage backend to store notebooks.
I have two versions. The main difference is the library used to read/write &lt;span class="caps"&gt;HDFS&lt;/span&gt;.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The first version uses &lt;a class="reference external" href="https://github.com/dask/hdfs3"&gt;&lt;span class="caps"&gt;HDFS3&lt;/span&gt;&lt;/a&gt; which is based on libhdfs3, a native C/C++ library to interact with the Hadoop
File System (&lt;span class="caps"&gt;HDFS&lt;/span&gt;).&lt;/li&gt;
&lt;li&gt;The second version uses &lt;a class="reference external" href="http://crs4.github.io/pydoop/"&gt;Pydoop&lt;/a&gt; which is based on the official &lt;a class="reference external" href="https://hadoop.apache.org/docs/r2.6.0/hadoop-project-dist/hadoop-hdfs/LibHdfs.html"&gt;libhdfs&lt;/a&gt;, a &lt;span class="caps"&gt;JNI&lt;/span&gt; based C &lt;span class="caps"&gt;API&lt;/span&gt; for Hadoop&amp;#8217;s Distributed
File System (&lt;span class="caps"&gt;HDFS&lt;/span&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;span class="caps"&gt;HDFS&lt;/span&gt; Contents Manager is used to add &lt;a class="reference external" href="http://jupyter.org/"&gt;Jupyter&lt;/a&gt; support to the &lt;a class="reference external" href="http://www.hops.io/"&gt;Hops&lt;/a&gt; Big Data platform. Check out the &lt;a class="reference external" href="https://alshishtawy.github.io/pdfs/posters/2017/HopsJupyter_V2.pdf"&gt;&lt;span class="caps"&gt;HDFS&lt;/span&gt; Contents
Manager poster&lt;/a&gt; at the &lt;span class="caps"&gt;SICS&lt;/span&gt; Open House 2017 event for more&amp;nbsp;details.&lt;/p&gt;
&lt;div class="section" id="source-code"&gt;
&lt;h2&gt;Source&amp;nbsp;Code&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The &lt;a class="reference external" href="https://github.com/alshishtawy/hdfscontents"&gt;&lt;span class="caps"&gt;HDFS3&lt;/span&gt;&amp;nbsp;version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a class="reference external" href="https://github.com/hopshadoop/hdfscontents"&gt;pydoop&amp;nbsp;version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Projects"></category><category term="Big Data"></category><category term="Open Source"></category><category term="Jupyter"></category><category term="HDFS"></category></entry><entry><title>OnlineElastMan: Self-Trained Proactive Elasticity Manager for Cloud-Based Storage Services</title><link href="https://alshishtawy.github.io/online-elastman.html" rel="alternate"></link><published>2016-03-18T00:00:00+01:00</published><updated>2017-04-11T00:00:00+02:00</updated><author><name>Ahmad Al-Shishtawy</name></author><id>tag:alshishtawy.github.io,2016-03-18:/online-elastman.html</id><summary type="html">&lt;p class="first last"&gt;A self-trained procative elasticity manager for the&amp;nbsp;Cloud&lt;/p&gt;
</summary><content type="html">&lt;p&gt;The pay-as-you-go pricing model and the illusion of unlimited resources in the Cloud initiate the idea to provision
services elastically. Elastic provisioning of services allocates/de-allocates resources dynamically in response to the
changes of the workload. It minimizes the service provisioning cost while maintaining the desired service level
objectives (SLOs). Model-predictive control is often used in building such elasticity controllers that dynamically
provision resources. However, they need to be trained, either online or offline, before making accurate scaling
decisions. The training process involves tedious and significant amount of work as well as some expertise, especially
when the model has many dimensions and the training granularity is fine, which is proved to be essential in order to
build an accurate elasticity&amp;nbsp;controller.&lt;/p&gt;
&lt;p&gt;OnlineElastMan is a self-trained proactive elasticity manager for cloud-based storage services. It automatically evolves
itself while serving the workload. Experiments using OnlineElastMan with Cassandra indicate that OnlineElastMan
continuously improves its provision accuracy, i.e., minimizing provisioning cost and &lt;span class="caps"&gt;SLO&lt;/span&gt; violations, under various
workload&amp;nbsp;patterns.&lt;/p&gt;
&lt;div class="section" id="publications"&gt;
&lt;h2&gt;Publications&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Y. Liu, D. Gureya, A. Al-Shishtawy, and V. Vlassov, &lt;strong&gt;&amp;#8220;OnlineElastMan: Self-Trained Proactive Elasticity Manager for
Cloud-Based Storage Services, &amp;#8220;&lt;/strong&gt; in Cluster Computing, &lt;span class="caps"&gt;ISSN&lt;/span&gt; 1573-7543, May 2017. &lt;a class="reference external image-reference" href="https://doi.org/10.1007/s10586-017-0899-z"&gt;&lt;img alt="10.1007/s10586-017-0899-z" src="https://alshishtawy.github.io/images/doi.png" style="height: 1em;" /&gt;&lt;/a&gt; &lt;a class="reference external image-reference" href="https://alshishtawy.github.io/pdfs/publications/CC2017_OnlineElastMan.pdf"&gt;&lt;img alt="pdf" src="https://alshishtawy.github.io/images/pdf.png" style="height: 1em;" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="https://alshishtawy.github.io/pdfs/publications/CC2017_OnlineElastMan.bib"&gt;&lt;img alt="bibtex" src="https://alshishtawy.github.io/images/bibtex.png" style="height: 1em;" /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Y. Liu, D. Gureya, A. Al-Shishtawy and V. Vlassov, &lt;strong&gt;&amp;#8220;OnlineElastMan: Self-Trained Proactive Elasticity Manager for
Cloud-Based Storage Services,&amp;#8221;&lt;/strong&gt; &lt;span class="caps"&gt;IEEE&lt;/span&gt; International Conference on Cloud and Autonomic Computing (&lt;span class="caps"&gt;ICCAC&lt;/span&gt;), Augsburg,
2016, pp. 50-59. &lt;a class="reference external image-reference" href="http://dx.doi.org/10.1109/ICCAC.2016.11"&gt;&lt;img alt="10.1109/ICCAC.2016.11" src="https://alshishtawy.github.io/images/doi.png" style="height: 1em;" /&gt;&lt;/a&gt; &lt;a class="reference external image-reference" href="https://alshishtawy.github.io/pdfs/publications/ICCAC2016_OnlineElastMan.pdf"&gt;&lt;img alt="pdf" src="https://alshishtawy.github.io/images/pdf.png" style="height: 1em;" /&gt;&lt;/a&gt; &lt;a class="reference external image-reference" href="https://alshishtawy.github.io/pdfs/publications/ICCAC2016_OnlineElastMan.bib"&gt;&lt;img alt="bibtex" src="https://alshishtawy.github.io/images/bibtex.png" style="height: 1em;" /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="source-code"&gt;
&lt;h2&gt;Source&amp;nbsp;Code&lt;/h2&gt;
&lt;p&gt;Github: &lt;a class="reference external" href="https://github.com/gureya/OnlineElasticityManager"&gt;OnlineElastMan&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Projects"></category><category term="Elasticity"></category><category term="Open Source"></category><category term="Cloud Computing"></category></entry><entry><title>SpanEdge: Towards Unifying Stream Processing over Central and Near-the-Edge Data Centers</title><link href="https://alshishtawy.github.io/spanedge.html" rel="alternate"></link><published>2015-12-01T00:00:00+01:00</published><updated>2016-12-08T00:00:00+01:00</updated><author><name>Ahmad Al-Shishtawy</name></author><id>tag:alshishtawy.github.io,2015-12-01:/spanedge.html</id><summary type="html">&lt;p class="first last"&gt;Unifying Stream Processing over Central and Near-the-Edge Data&amp;nbsp;Centers&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Distributed Stream Processing Systems are typically deployed within a single data center in order to achieve high
performance and low-latency computation. The data streams analyzed by such systems are expected to be available in the
same data center. Either the data streams are generated within the data center (e.g., logs, transactions, user clicks)
or they are aggregated by external systems from various sources and buffered into the data center for processing
(e.g., IoT, sensor data, traffic&amp;nbsp;information).&lt;/p&gt;
&lt;p&gt;The data center approach for stream processing analytics fits the requirements of the majority of the applications that
exists today. However, for latency sensitive applications, such as real-time decision-making, which relies on analyzing
geographically distributed data streams, a data center approach might not be sufficient. Aggregating data streams incurs
high overheads in terms of latency and bandwidth consumption in addition to the overhead of sending the analysis
outcomes back to where an action needs to be&amp;nbsp;taken.&lt;/p&gt;
&lt;p&gt;We propose a new stream processing architecture for efficiently analyzing geographically distributed data streams. Our
approach utilizes emerging distributed virtualized environments, such as Mobile Edge Clouds, to extend stream processing
systems outside the data center in order to push critical parts of the analysis closer to the data sources. This will
enable real-time applications to respond faster to geographically distributed&amp;nbsp;events.&lt;/p&gt;
&lt;p&gt;In order to realize our approach, we have implemented a geo-aware scheduler plugin for the Apache Storm stream
processing system. The scheduler takes as an input a Storm topology (Figure 1) to be scheduled and executed on the
available datacenter/edge Cloud resources. The scheduler enables the developers of the topology to annotate groups
of stream processing elements that can be replicated and pushed outside of the data center to an Edge Cloud with
close proximity to the stream source. In order to operate, the scheduler requires knowledge of the available
datacenter/edge Clouds, data stream types available at each Cloud, and latencies among&amp;nbsp;clouds.&lt;/p&gt;
&lt;img alt="ElastMan logo" class="align-center" src="https://alshishtawy.github.io/images/SpanEdge.png" style="width: 90%;" /&gt;
&lt;div class="section" id="publications"&gt;
&lt;h2&gt;Publications&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;span class="caps"&gt;H. P.&lt;/span&gt; Sajjad, K. Danniswara, A. Al-Shishtawy and V. Vlassov, &lt;strong&gt;&amp;#8220;SpanEdge: Towards Unifying Stream Processing over
Central and Near-the-Edge Data Centers,&amp;#8221;&lt;/strong&gt; 2016 &lt;span class="caps"&gt;IEEE&lt;/span&gt;/&lt;span class="caps"&gt;ACM&lt;/span&gt; Symposium on Edge Computing (&lt;span class="caps"&gt;SEC&lt;/span&gt;), Washington, &lt;span class="caps"&gt;DC&lt;/span&gt;, 2016,
pp. 168-178. &lt;a class="reference external image-reference" href="http://dx.doi.org/10.1109/SEC.2016.17"&gt;&lt;img alt="10.1109/SEC.2016.17" src="https://alshishtawy.github.io/images/doi.png" style="height: 1em;" /&gt;&lt;/a&gt; &lt;a class="reference external image-reference" href="https://alshishtawy.github.io/pdfs/publications/SEC2016_SpanEdge.pdf"&gt;&lt;img alt="pdf" src="https://alshishtawy.github.io/images/pdf.png" style="height: 1em;" /&gt;&lt;/a&gt; &lt;a class="reference external image-reference" href="https://alshishtawy.github.io/pdfs/publications/SEC2016_SpanEdge_Slides.pdf"&gt;&lt;img alt="slides" src="https://alshishtawy.github.io/images/slides.png" style="height: 1em;" /&gt;&lt;/a&gt; &lt;a class="reference external image-reference" href="https://alshishtawy.github.io/pdfs/publications/SEC2016_SpanEdge.bib"&gt;&lt;img alt="bibtex" src="https://alshishtawy.github.io/images/bibtex.png" style="height: 1em;" /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="source-code"&gt;
&lt;h2&gt;Source&amp;nbsp;Code&lt;/h2&gt;
&lt;p&gt;Github: &lt;a class="reference external" href="https://github.com/Telolets/StormOnEdge"&gt;SpanEdge&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Projects"></category><category term="Edge Computing"></category><category term="Open Source"></category><category term="Cloud Computing"></category></entry><entry><title>ElastMan: Elasticity Manager for Elastic Cloud-Based Services</title><link href="https://alshishtawy.github.io/elastman.html" rel="alternate"></link><published>2013-09-09T10:00:00+02:00</published><updated>2015-03-16T10:00:00+01:00</updated><author><name>Ahmad Al-Shishtawy</name></author><id>tag:alshishtawy.github.io,2013-09-09:/elastman.html</id><summary type="html">&lt;p class="first last"&gt;Elasticity Manager for Elastic Cloud-Based&amp;nbsp;Services&lt;/p&gt;
</summary><content type="html">&lt;img alt="ElastMan logo" class="align-left" src="https://alshishtawy.github.io/images/ElastManLogo.png" style="width: 25%;" /&gt;
&lt;p&gt;The increasing spread of elastic Cloud services, together with the pay-as-you-go pricing model of Cloud computing, has
led to the need of an elasticity controller. The controller automatically resizes an elastic service in response to
changes in workload, in order to meet Service Level Objectives (SLOs) at a reduced cost. However, variable performance
of Cloud Virtual Machines and nonlinearities in Cloud services, such as the diminishing reward of adding a service
instance with increasing the scale, complicates the controller&amp;nbsp;design.&lt;/p&gt;
&lt;p&gt;ElastMan is an elasticity controller for Elastic Cloud-based services. ElastMan combines feedforward and feedback
control. Feedforward control is used to respond to spikes in the workload by quickly resizing the service to meet SLOs
at a minimal cost. Feedback control is used to correct modeling errors and to handle diurnal workload. To address
nonlinearities, our design of ElastMan leverages the near-linear scalability of elastic Cloud services in order to
build a scale-independent model of the&amp;nbsp;service.&lt;/p&gt;
&lt;p&gt;We have evaluated ElastMan using the Voldemort key-value store running in an OpenStack Cloud environment. Our
evaluation shows the feasibility and effectiveness of our approach to automation of Cloud service&amp;nbsp;elasticity.&lt;/p&gt;
&lt;div class="section" id="publications"&gt;
&lt;h2&gt;Publications&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ElastMan: Elasticity Manager for Elastic Key-Value Stores in the Cloud, Ahmad Al-Shishtawy, Vladimir Vlassov.
The &lt;span class="caps"&gt;ACM&lt;/span&gt; Cloud and Autonomic Computing Conference (&lt;span class="caps"&gt;CAC&lt;/span&gt; 2013), Miami, &lt;span class="caps"&gt;FL&lt;/span&gt;, &lt;span class="caps"&gt;USA&lt;/span&gt;,  August 5-9, 2013. &lt;a class="reference external image-reference" href="http://dx.doi.org/10.1145/2494621.2494630"&gt;&lt;img alt="10.1145/2494621.2494630" src="https://alshishtawy.github.io/images/doi.png" style="height: 14pt;" /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ElastMan: Autonomic Elasticity Manager for Cloud-Based Key-value Stores, Ahmad Al-Shishtawy, Vladimir Vlassov. The
22nd &lt;span class="caps"&gt;ACM&lt;/span&gt; International Symposium on High-Performance Parallel and Distributed Computing (&lt;span class="caps"&gt;HPDC&lt;/span&gt; &amp;#8216;13). &lt;span class="caps"&gt;ACM&lt;/span&gt;, New York,
&lt;span class="caps"&gt;NY&lt;/span&gt;, &lt;span class="caps"&gt;USA&lt;/span&gt;, pp. 115-116. &lt;a class="reference external image-reference" href="http://doi.acm.org/10.1145/2462902.2462925"&gt;&lt;img alt="10.1145/2462902.2462925" src="https://alshishtawy.github.io/images/doi.png" style="height: 14pt;" /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="source-code"&gt;
&lt;h2&gt;Source&amp;nbsp;Code&lt;/h2&gt;
&lt;p&gt;Github: &lt;a class="reference external" href="https://github.com/alshishtawy/ElastMan"&gt;ElastMan&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Projects"></category><category term="Elasticity"></category><category term="Open Source"></category><category term="Cloud Computing"></category></entry></feed>